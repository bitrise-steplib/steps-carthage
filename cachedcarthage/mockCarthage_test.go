package cachedcarthage

import mock "github.com/stretchr/testify/mock"

// MockCarthageCache is an autogenerated mock type for the CarthageCache type
type MockCarthageCache struct {
	mock.Mock
}

// Collect provides a mock function with given fields:
func (m *MockCarthageCache) Collect() error {
	args := m.Called()
	return args.Error(0)
}

// Create provides a mock function with given fields:
func (m *MockCarthageCache) Create() error {
	args := m.Called()
	return args.Error(0)
}

// IsAvailable provides a mock function with given fields:
func (m *MockCarthageCache) IsAvailable() (bool, error) {
	args := m.Called()
	return args.Bool(0), args.Error(1)
}

func (m *MockCarthageCache) GivenIsAvailableFails(reason error) *MockCarthageCache {
	m.On("IsAvailable").Return(false, reason)
	return m
}

func (m *MockCarthageCache) GivenIsAvailableSucceeds(result bool) *MockCarthageCache {
	m.On("IsAvailable").Return(result, nil)
	return m
}

func (m *MockCarthageCache) GivenCollectFails(reason error) *MockCarthageCache {
	m.On("Collect").Return(reason)
	return m
}

func (m *MockCarthageCache) GivenCollectSucceeds() *MockCarthageCache {
	m.On("Collect").Return(nil)
	return m
}

func (m *MockCarthageCache) GivenCreateFails(reason error) *MockCarthageCache {
	m.On("Create").Return(reason)
	return m
}

func (m *MockCarthageCache) GivenCreateSucceeds() *MockCarthageCache {
	m.On("Create").Return(nil)
	return m
}
