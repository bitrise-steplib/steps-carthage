format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
    # Shared test configs
    - SAMPLE_APP_URL: https://github.com/bitrise-samples/sample-apps-carthage-objc.git
    - ORIG_BITRISE_SOURCE_DIR: $BITRISE_SOURCE_DIR
    - CARTHAGE_OPTIONS: "--platform ios --project-directory $BITRISE_SOURCE_DIR/_tmp"
    - TEST_CACHE: false
    - SKIP_RUN: false
    - XC_VER: ""
    # Shared test secrets
    - GITHUB_TOKEN: $GITHUB_TOKEN

workflows:
  test_without_xcconfig:
    before_run:
      - _setup_xcode_version_check
    after_run:
      - _run

  test_xcconfig_from_env:
    before_run:
      - _setup_local_workaround_xconfig_file
      - _setup_config_env
    after_run:
      - _run

  test_xcconfig_from_input:
    envs:
      - CONFIG_PATH: "file://$TMP_XCODE_XCCONFIG_FILE"
    before_run:
      - _setup_local_workaround_xconfig_file
    after_run:
      - _run

  test_xcconfig_from_input_url:
    envs:
      - CONFIG_PATH: "https://raw.githubusercontent.com/bitrise-io/sample-apps-carthage-objc/master/static.xcconfig"
    after_run:
      - _run

  test_cache_xcconfig_from_env:
    envs:
      - TEST_CACHE: true
    before_run:
      - _setup_local_workaround_xconfig_file
      - _setup_config_env
    after_run:
      - _run

  _run:
    steps:
      - git::https://github.com/bitrise-steplib/bitrise-step-simple-git-clone.git@master:
          inputs:
            - repository_url: $SAMPLE_APP_URL
            - clone_into_dir: "$ORIG_BITRISE_SOURCE_DIR/_tmp"
            - branch: "master"
      - change-workdir:
          title: Switch working dir to test / _tmp dir
          inputs:
            - path: $ORIG_BITRISE_SOURCE_DIR/_tmp
            - is_create_path: true
      - path::./:
          run_if: |-
            {{enveq "SKIP_RUN" "false"}}
          inputs:
            - xcconfig: $CONFIG_PATH
            - carthage_options: $CARTHAGE_OPTIONS
            - github_access_token: $GITHUB_TOKEN
      - path::./:
          run_if: |-
            {{enveq "TEST_CACHE" "true"}}
          inputs:
            - xcconfig: $CONFIG_PATH
            - carthage_options: $CARTHAGE_OPTIONS
            - github_access_token: $GITHUB_TOKEN
    after_run:
      - _check_outputs
      - _teardown

  _setup_local_workaround_xconfig_file:
    steps:
      - script:
          inputs:
            - content: |-
                #!/bin/bash

                if xcodebuild -version | grep -ocE '(11)\..*'; then
                  export XC_VER=1100
                elif xcodebuild -version | grep -ocE '(12)\..*'; then
                  export XC_VER=1200
                elif xcodebuild -version | grep -ocE '(13)\..*'; then
                  export XC_VER=1300
                envman add --key XC_VER --value XC_VER

                # source https://github.com/Carthage/Carthage/issues/3019#issuecomment-665136323
                # updated from https://github.com/Carthage/Carthage/issues/3201#issuecomment-859516176
                set -euo pipefail

                xcconfig=$(mktemp /tmp/static.xcconfig.XXXXXX)

                # For Xcode 12 make sure EXCLUDED_ARCHS is set to arm architectures otherwise
                # the build will fail on lipo due to duplicate architectures.
                echo "EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_simulator__NATIVE_ARCH_64_BIT_x86_64__XCODE_$XC_VER = arm64 arm64e armv7 armv7s armv6 armv8" >> $xcconfig
                echo 'EXCLUDED_ARCHS = $(inherited) $(EXCLUDED_ARCHS__EFFECTIVE_PLATFORM_SUFFIX_$(EFFECTIVE_PLATFORM_SUFFIX)__NATIVE_ARCH_64_BIT_$(NATIVE_ARCH_64_BIT)__XCODE_$(XCODE_VERSION_MAJOR))' >> $xcconfig

                cat "$xcconfig"

                envman add --key TMP_XCODE_XCCONFIG_FILE --value "$xcconfig"

  _teardown:
    steps:
      - script:
          title: Clear TMP_XCODE_XCCONFIG_FILE
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -ex
                rm -f $TMP_XCODE_XCCONFIG_FILE
                envman add --key TMP_XCODE_XCCONFIG_FILE --value ""
                envman add --key XCODE_XCCONFIG_FILE --value ""
      - change-workdir:
          title: Switch working dir to ORIG_BITRISE_SOURCE_DIR
          inputs:
            - path: $ORIG_BITRISE_SOURCE_DIR
      - script:
          title: Clean _tmp folder
          inputs:
            - content: |-
                #!/bin/bash
                set -e
                set -v
                rm -rf $ORIG_BITRISE_SOURCE_DIR/_tmp
      - script:
          title: Clear BITRISE_CACHE_INCLUDE_PATHS env
          inputs:
            - content: |-
                #!/bin/bash
                set -ex
                envman add --key BITRISE_CACHE_INCLUDE_PATHS --value ""
                envman add --key SKIP_RUN --value false
                envman add --key XC_VER --value ""
                unset SKIP_RUN
                unset XC_VER

  _setup_config_env:
    steps:
      - script:
          inputs:
            - content: |-
                #!/bin/bash
                set -euo pipefail

                envman add --key XCODE_XCCONFIG_FILE --value "$TMP_XCODE_XCCONFIG_FILE"

  _setup_xcode_version_check:
    steps:
      - script:
          title: Set SKIP_RUN
          inputs:
            - content: |-
                #!/bin/bash

                if xcodebuild -version | grep -ocE '(11|12|13)\..*'; then
                  export SKIP_RUN=true
                  echo "Xcode 11|12|13 found"
                else
                  export SKIP_RUN=false
                  echo "Xcode 11|12|13 NOT found"
                fi
                envman add --key SKIP_RUN --value $SKIP_RUN

  _check_outputs:
    steps:
      - script:
          run_if: |-
            {{enveq "SKIP_RUN" "false"}}
          title: Check outputs
          inputs:
            - content: |-
                #!/usr/bin/env bash
                set -ex
                if [ -z "$BITRISE_CACHE_INCLUDE_PATHS" ] ; then echo "BITRISE_CACHE_INCLUDE_PATHS env is empty" ; exit 1 ; fi ;
                [[ ! -f $ORIG_BITRISE_SOURCE_DIR/_tmp/Carthage/Cachefile ]] && echo "$ORIG_BITRISE_SOURCE_DIR/_tmp/Carthage/Cachefile does not exist" && exit 1
                exit 0
